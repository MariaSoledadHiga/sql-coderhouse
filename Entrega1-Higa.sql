CREATE SCHEMA DB_39775_HIGA;
USE DB_39775_HIGA;

-- tabla cargos_empleados: contiene los cargos posibles de los empleados
CREATE TABLE IF NOT EXISTS CARGOS_EMPLEADOS (
	ID_CARGO_EMPLEADO INT AUTO_INCREMENT NOT NULL,
	NOMBRE_CARGO VARCHAR(20) NOT NULL,
	DESCRIPCION_CARGO VARCHAR(50) NOT NULL,
	CONSTRAINT PK_CARGOS_EMPLEADOS PRIMARY KEY (ID_CARGO_EMPLEADO)
);
ALTER TABLE CARGOS_EMPLEADOS ADD CONSTRAINT UQ_NOMBRE_CARGO UNIQUE (NOMBRE_CARGO);

-- tabla sucursales: contiene los datos de las sucursales
CREATE TABLE IF NOT EXISTS SUCURSALES (
	ID_SUCURSAL INT AUTO_INCREMENT NOT NULL,
    NRO_SUCURSAL CHAR(4) NOT NULL,
    NOMBRE_SUCURSAL VARCHAR(20) NOT NULL,
    DOMICILIO_SUCURSAL  VARCHAR(50) NOT NULL,
    TELEFONO_SUCURSAL CHAR(10) NOT NULL,
	CONSTRAINT PK_SUCURSALES PRIMARY KEY (ID_SUCURSAL)
);
ALTER TABLE SUCURSALES ADD CONSTRAINT UQ_NRO_SUCURSAL UNIQUE (NRO_SUCURSAL);
ALTER TABLE SUCURSALES ADD CONSTRAINT UQ_NOMBRE_SUCURSAL UNIQUE (NOMBRE_SUCURSAL);

-- tabla empleados: contiene los datos personales de los empleados
CREATE TABLE IF NOT EXISTS EMPLEADOS (
	ID_EMPLEADO INT AUTO_INCREMENT NOT NULL,
   	ID_CARGO_EMPLEADO INT NOT NULL,
    ID_SUCURSAL INT NOT NULL,
    DNI_EMPLEADO CHAR(8) NOT NULL,
    CUIL_EMPLEADO CHAR(11) NOT NULL,
    APELLIDO_EMPLEADO VARCHAR(30) NOT NULL,
    NOMBRE_EMPLEADO VARCHAR(30) NOT NULL,
    DOMICILIO_EMPLEADO VARCHAR(50) NOT NULL,
    TELEFONO_EMPLEADO CHAR(10) NOT NULL,
    USUARIO_EMPLEADO VARCHAR(15) NULL,
    PASSWORD_EMPLEADO VARCHAR(15) NULL,
    ESTADO_EMPLEADO ENUM('ACTIVO','INACTIVO', 'BAJA') NOT NULL,
    FECHA_ALTA_EMPLEADO DATE NOT NULL,
    FECHA_BAJA_EMPLEADO DATE NULL,
    CONSTRAINT PK_EMPLEADOS PRIMARY KEY (ID_EMPLEADO)
);
ALTER TABLE EMPLEADOS ADD CONSTRAINT UQ_CUIL_EMPLEADO UNIQUE (CUIL_EMPLEADO);
ALTER TABLE EMPLEADOS ADD CONSTRAINT UQ_USUARIO_EMPLEADO UNIQUE (USUARIO_EMPLEADO);

-- tabla clientes: contiene los datos personales de los clientes
CREATE TABLE IF NOT EXISTS CLIENTES (
	ID_CLIENTE INT AUTO_INCREMENT NOT NULL,
    DNI_CLIENTE CHAR(8) NOT NULL,
    APELLIDO_CLIENTE VARCHAR(30) NOT NULL,
    NOMBRE_CLIENTE VARCHAR(30) NOT NULL,
    DOMICILIO_CLIENTE VARCHAR(50) NULL,
    TELEFONO_CLIENTE CHAR(10) NULL,
	EMAIL_CLIENTE VARCHAR(30) NULL,
    CONSTRAINT PK_CLIENTES PRIMARY KEY (ID_CLIENTE)
);

-- tabla proveedores: contiene los datos de los proveedores
CREATE TABLE IF NOT EXISTS PROVEEDORES (
	ID_PROVEEDOR INT AUTO_INCREMENT NOT NULL,
    CUIT_PROVEEDOR CHAR(11) NOT NULL,
    NOMBRE_PROVEEDOR VARCHAR(30) NOT NULL,
    DOMICILIO_PROVEEDOR VARCHAR(50) NOT NULL,
    TELEFONO_PROVEEDOR CHAR(10) NOT NULL,
	EMAIL_PROVEEDOR VARCHAR(30) NOT NULL,
    CONTACTO_PROVEEDOR  VARCHAR(30) NOT NULL,
    CONSTRAINT PK_PROVEEDORES PRIMARY KEY (ID_PROVEEDOR)
);
ALTER TABLE PROVEEDORES ADD CONSTRAINT UQ_CUIT_PROVEEDOR UNIQUE (CUIT_PROVEEDOR);

-- tabla categoria_productos: son las categorias en las que se pueden clasificar los productos
CREATE TABLE IF NOT EXISTS CATEGORIAS_PRODUCTOS (
	ID_CATEGORIA_PRODUCTO INT AUTO_INCREMENT NOT NULL,
	NOMBRE_CATEGORIA VARCHAR(30) NOT NULL,
	DESCRIPCION_CATEGORIA VARCHAR(50) NOT NULL,
	CONSTRAINT PK_CATEGORIAS_PRODUCTOS PRIMARY KEY (ID_CATEGORIA_PRODUCTO)
);
ALTER TABLE CATEGORIAS_PRODUCTOS ADD CONSTRAINT UQ_NOMBRE_CATEGORIA_PRODUCTO UNIQUE (NOMBRE_CATEGORIA);

-- tabla productos: contiene los datos propios a cada producto
CREATE TABLE IF NOT EXISTS PRODUCTOS (
	ID_PRODUCTO INT AUTO_INCREMENT NOT NULL,
	ID_CATEGORIA_PRODUCTO INT NOT NULL,    
    NOMBRE_PRODUCTO VARCHAR(30) NOT NULL,
    DESCRIPCION_PRODUCTO VARCHAR(50) NOT NULL,
    ESTADO_PRODUCTO ENUM('CONTINUADO','DESCONTINUADO') NOT NULL,
    ID_PROVEEDOR INT NOT NULL,
    CONSTRAINT PK_PRODUCTOS PRIMARY KEY (ID_PRODUCTO)
);
ALTER TABLE PRODUCTOS ADD CONSTRAINT UQ_NOMBRE_PRODUCTO UNIQUE (NOMBRE_PRODUCTO);
ALTER TABLE PRODUCTOS ALTER ESTADO_PRODUCTO SET DEFAULT 'CONTINUADO';

-- tabla compras: contiene la información de las compras
CREATE TABLE IF NOT EXISTS COMPRAS (
	ID_COMPRA INT AUTO_INCREMENT NOT NULL,
    TIPO_FACT_COMPRA ENUM ('A','B','C') NOT NULL,
    PREFIJO_FACT_COMPRA CHAR(4) NOT NULL,
    NRO_FACT_COMPRA CHAR(8) NOT NULL,
	ID_PROVEEDOR INT NOT NULL,
    ID_EMPLEADO INT NOT NULL,
    ID_PRODUCTO INT NOT NULL,
    CANTIDAD_COMPRA INT NOT NULL,
    PRECIO_COMPRA DECIMAL(10,2) NOT NULL,
    FECHA_COMPRA DATE NOT NULL,
    CONSTRAINT PK_COMPRAS PRIMARY KEY (ID_COMPRA)
); 
ALTER TABLE COMPRAS ADD CONSTRAINT CHK_CANTIDAD_PRECIO_COMPRA CHECK (CANTIDAD_COMPRA > 0 AND PRECIO_COMPRA > 0);

-- tabla ventas: contiene información sobre las ventas
CREATE TABLE IF NOT EXISTS VENTAS (
	ID_VENTA INT AUTO_INCREMENT NOT NULL,
    ID_CLIENTE INT NOT NULL,
   	TIPO_FACT_VENTA ENUM ('A','B') NOT NULL,
    ID_SUCURSAL INT NOT NULL,
    NRO_FACT_VENTA CHAR(8) NOT NULL,
	ID_EMPLEADO INT NOT NULL,
    ID_PRODUCTO INT NOT NULL,
    CANTIDAD_VENTA INT NOT NULL,
    PRECIO_VENTA DECIMAL(10,2) NOT NULL,
    FECHA_VENTA DATE NOT NULL,
	CONSTRAINT PK_VENTAS PRIMARY KEY (ID_VENTA)
);
ALTER TABLE VENTAS ADD CONSTRAINT CHK_CANTIDAD_PRECIO_VENTA CHECK (CANTIDAD_VENTA > 0 AND PRECIO_VENTA > 0);

-- tabla registro_stock: contiene los movimientos de stock
CREATE TABLE IF NOT EXISTS REGISTRO_STOCK (
	ID_REGISTRO_STOCK INT AUTO_INCREMENT NOT NULL,
    TIPO_MOVIMIENTO_STOCK ENUM ('ENTRADA','SALIDA') NOT NULL,
    ID_PRODUCTO INT NOT NULL,
    CANTIDAD_REGISTRO_STOCK INT NOT NULL,
    FECHA_REGISTRO_STOCK DATETIME NOT NULL,
    CONSTRAINT PK_REGISTRO_STOCK PRIMARY KEY (ID_REGISTRO_STOCK)
);
ALTER TABLE REGISTRO_STOCK ALTER TIPO_MOVIMIENTO_STOCK SET DEFAULT 'SALIDA';
ALTER TABLE REGISTRO_STOCK ADD CONSTRAINT CHK_CANTIDA_REGISTRO_STOCK CHECK (CANTIDAD_REGISTRO_STOCK > 0);

-- tabla stock: contiene el stock existente de cada producto
CREATE TABLE IF NOT EXISTS STOCK (
	ID_PRODUCTO INT NOT NULL,
    STOCK INT NOT NULL,
    CONSTRAINT PK_STOCK PRIMARY KEY (ID_PRODUCTO)
);
ALTER TABLE STOCK ADD CONSTRAINT CHK_STOCK CHECK (STOCK >= 0);


-- agregando foreign keys

-- Reference: fk_empleados_cargos_empleados (tabla: empleados)
ALTER TABLE EMPLEADOS ADD CONSTRAINT FK_EMPLEADOS_CARGOS_EMPLEADOS FOREIGN KEY FK_EMPLEADOS_CARGOS_EMPLEADOS (ID_CARGO_EMPLEADO) REFERENCES CARGOS_EMPLEADOS (ID_CARGO_EMPLEADO);

-- Reference: fk_empleados_sucursales (tabla: empleados)
ALTER TABLE EMPLEADOS ADD CONSTRAINT FK_EMPLEADOS_SUCURSALES FOREIGN KEY FK_EMPLEADOS_SUCURSALES (ID_SUCURSAL) REFERENCES SUCURSALES (ID_SUCURSAL);

-- Reference: fk_productos_categorias_productos (tabla: productos)
ALTER TABLE PRODUCTOS ADD CONSTRAINT FK_PRODUCTOS_CATEGORIAS_PRODUCTOS FOREIGN KEY FK_PRODUCTOS_CATEGORIAS_PRODUCTOS (ID_CATEGORIA_PRODUCTO) REFERENCES CATEGORIAS_PRODUCTOS (ID_CATEGORIA_PRODUCTO);

-- Reference: fk_productos_proveedores (tabla: productos)
ALTER TABLE PRODUCTOS ADD CONSTRAINT FK_PRODUCTOS_PROVEEDORES FOREIGN KEY FK_PRODUCTOS_PROVEEDORES (ID_PROVEEDOR) REFERENCES PROVEEDORES (ID_PROVEEDOR);

-- Reference: fk_compras_proveedores (tabla: compras)
ALTER TABLE COMPRAS ADD CONSTRAINT FK_COMPRAS_PROVEEDORES FOREIGN KEY FK_COMPRAS_PROVEEDORES (ID_PROVEEDOR) REFERENCES PROVEEDORES (ID_PROVEEDOR);

-- Reference: fk_compras_empleados (tabla: compras)
ALTER TABLE COMPRAS ADD CONSTRAINT FK_COMPRAS_EMPLEADOS FOREIGN KEY FK_COMPRAS_EMPLEADOS (ID_EMPLEADO) REFERENCES EMPLEADOS (ID_EMPLEADO);

-- Reference: fk_compras_productos (tabla: compras)
ALTER TABLE COMPRAS ADD CONSTRAINT FK_COMPRAS_PRODUCTOS FOREIGN KEY FK_COMPRAS_PRODUCTOS (ID_PRODUCTO) REFERENCES PRODUCTOS (ID_PRODUCTO);

-- Reference: fk_ventas_clientes (tabla: ventas)
ALTER TABLE VENTAS ADD CONSTRAINT FK_VENTAS_CLIENTES FOREIGN KEY FK_VENTAS_CLIENTES (ID_CLIENTE) REFERENCES CLIENTES (ID_CLIENTE);

-- Reference: fk_ventas_sucursales (tabla: ventas)
ALTER TABLE VENTAS ADD CONSTRAINT FK_VENTAS_SUCURSALES FOREIGN KEY FK_VENTAS_SUCURSALES (ID_SUCURSAL) REFERENCES SUCURSALES (ID_SUCURSAL);

-- Reference: fk_ventas_empleados (tabla: ventas)
ALTER TABLE VENTAS ADD CONSTRAINT FK_VENTAS_EMPLEADOS FOREIGN KEY FK_VENTAS_EMPLEADOS (ID_EMPLEADO) REFERENCES EMPLEADOS (ID_EMPLEADO);

-- Reference: fk_ventas_productos (tabla: ventas)
ALTER TABLE VENTAS ADD CONSTRAINT FK_VENTAS_PRODUCTOS FOREIGN KEY FK_VENTAS_PRODUCTOS (ID_PRODUCTO) REFERENCES PRODUCTOS (ID_PRODUCTO);

-- Reference: fk_registro_stock_productos (tabla: registro_stock)
ALTER TABLE REGISTRO_STOCK ADD CONSTRAINT FK_REGISTRO_STOCK_PRODUCTOS FOREIGN KEY FK_REGISTRO_STOCK_PRODUCTOS (ID_PRODUCTO) REFERENCES PRODUCTOS (ID_PRODUCTO);

-- Reference: fk_stock_productos (tabla: stock)
ALTER TABLE STOCK ADD CONSTRAINT FK_STOCK_PRODUCTOS FOREIGN KEY FK_STOCK_PRODUCTOS (ID_PRODUCTO) REFERENCES PRODUCTOS (ID_PRODUCTO);
